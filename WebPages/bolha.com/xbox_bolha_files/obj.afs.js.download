function AFS()
{
	this.baseURL;
	this.path;
	this.params;
	this.initialParams;
	this.currentFacet;
	this.browseAction;
	this.unomittedSearch;
	this.iframeCheck;

	this.overlay;
	this.wrapper;
	this.frame;
	this.content;
	this.openerClass = ".openAFS";
	this.optionSelector;
	this.showSubOptions;
	this.submitButton;
	this.cancelButton;
	this.menuButton;
	this.resetLink;
	this.rangeInputValues;
	
	this.init = init;
	this.setEvents = setEvents;
	
	function init(o)
	{
		o.overlay = $("#afs-overlay");
		o.wrapper = $("#afs-wrapper");
		o.frame = $("#afs-frame");
		o.content = $("#afs-facetSelector");
		o.optionSelector = $("#afs-facetSelector a.checkBox");
		o.showSubOptions = $("#afs-facetSelector a.showSubOptions");
		o.submitButton = $("#afs-button-search");
		o.cancelButton = $("#afs-button-cancel");
		o.menuButton = $("#afs-facetMenu a");
		o.resetLink = $("#afs-facetSelector a.resetLink");
		o.rangeInputValues = $("input#rangeSlider_values");

		o.setEvents(o);
	}
	
	function setEvents(o)
	{
		$(o.openerClass).live("click",function(e){
			e.preventDefault();
			var facetData = $(this).data('facet');
			showAFS(o);
			getAdvancedFacet(o,facetData);
		});
		
		$(o.optionSelector).live("click",function(e){
			e.preventDefault();
			var option = $(this).data('path');
			var field = $(this).data('field');
			
			if ($(this).hasClass("selected")){
				removeFromParams(o,field,option);
				$(this).removeClass("selected");
			} else {
				if (o.currentFacet.multiSelect == 'false'){
					deselectAllOptions(o);
				}
				addToParams(o,field,option);
				if ($(this).hasClass("childrenSelected")){
					$(this).removeClass("childrenSelected");
				}
				$(this).addClass("selected");
			}
		});
		
		$(o.showSubOptions).live("click",function(e){
			e.preventDefault();
			var prefix = $(this).data('path');
			getSubOptions(o,prefix);
		});
		
		$(o.submitButton).live("click",function(e){
			e.preventDefault();
			var uri = buildSubmitURL(o);
			window.location.href = encodeURI(uri);
		});
		
		$(o.cancelButton).live("click",function(e){
			e.preventDefault();
			o.params = o.initialParams;
			hideAFS(o);
		});
		
		
		$(o.menuButton).live("click", function(e){
			e.preventDefault();
			var facetData = $(this).data('facet');
			getAdvancedFacet(o,facetData);
		});
		
		$(o.resetLink).live("click", function(e){
			e.preventDefault();
			var facetData = $(this).data('facet');
			getAdvancedFacet(o,facetData);
		});


		$(o.rangeInputValues).live("select",function(){
			var values = $(this).val();
			var field = $(this).attr("name");
			addToParams(o,field,values);
		});
		
	}
	
	function deselectAllOptions(o){
		$(o.content).find("a.selected").each(function(){
			$(this).removeClass("selected");
		});
	}
	
	function setMenuItems(o)
	{
		var currentMenuID = 'key_'+o.currentFacet.key;
		$("#afs-facetMenu li").each(function(){
			if ($(this).attr("id") == currentMenuID){
				if ($(this).hasClass('current')==false){
					$(this).addClass('current');
				}
			} else {
				$(this).removeClass('current');
			}
		});
	}
	
	function getAdvancedFacet(o, facetData)
	{
		appendLoader(o);

		o.currentFacet = facetData;
		setMenuItems(o);
		
		$.ajax({
			type: 'GET',
			url: o.baseURL + '/afs/getFacetOptions',
			timeout: 5000,
			dataType: 'html',
			data: {
				facet: facetData,
				params: o.params,
				unomitted: o.unomittedSearch
			},
			cache: true,
			success: function(data){
				$(o.content).html(data);
				$("#afs_Scrollbar").tinyscrollbar();
			},
			error: function(data, textStatus, errorThrown){
			}
		});
		
	}
	
	function getSubOptions(o, prefix)
	{
		appendLoader(o);

		$.ajax({
			type: 'GET',
			url: o.baseURL + '/afs/getFacetOptions?prefix='+prefix,
			timeout: 5000,
			dataType: 'html',
			data: {
				facet: o.currentFacet,
				params: o.params,
				unomitted: o.unomittedSearch
			},
			cache: true,
			success: function(data){
				$(o.content).html(data);
				$("#afs_Scrollbar").tinyscrollbar();
			},
			error: function(data, textStatus, errorThrown){
			}
		});
		
	}
	
	function showAFS(o)
	{
		var wHeight = $(window).innerHeight();
		var fHeight = parseInt($(o.frame).css("height"));

		if(o.iframeCheck == 1) {
			topMargin = (wHeight - fHeight) / 6;
		} else {
			topMargin = (wHeight - fHeight) / 2;
		}

		$(o.frame).css("margin-top",topMargin+"px");
		
		$(o.overlay).show();
		$(o.wrapper).show();
		
		$(o.frame).bind("clickoutside",function(){
			hideAFS(o);
		});
	}
	
	function hideAFS(o)
	{
		$(o.wrapper).hide();
		$(o.overlay).hide();
		$(o.frame).unbind("clickoutside");
	}
	
	function removeFromParams(o,field,option)
	{
		if (o.params[field] instanceof Array){
			for (var i in o.params[field]){
				if (o.params[field][i] == option){
					o.params[field].splice(i,1);
				}
			}
			if (o.params[field].length == 1) {
				o.params[field] = o.params[field][0];
			}
		} else {
			delete o.params[field];
		}
		
	}
	
	function addToParams(o,field,option)
	{
		
		if (typeof(o.params[field])==='undefined'){
			o.params[field] = option;
		} else {
			if (o.currentFacet.multiSelect != 'undefined' && o.currentFacet.multiSelect == 'true'){
			
				if (o.params[field] instanceof Array){
					params = o.params[field];
				} else {
					params = [o.params[field]];
				}
				
				params.push(option);
				o.params[field] = params;
				
			} else {
				o.params[field] = option;
			}
			
		}
		
		if (o.currentFacet.type == 'AdvancedHierarchicalField'){
			
			// if child is selected remove selected parent from params
			optionString = option.slice(0,-1);
			optionPaths = optionString.split('/');
			pathLength = optionPaths.length - 1;
			if (pathLength > 0){
				var parentPath = '';
				for (var i=0;i<pathLength;i++){
					parentPath += optionPaths[i] + '/';
					if ($.inArray(parentPath,o.params[field]) !== -1){
						removeFromParams(o,field,parentPath);
					} 
				}
			}
			
			// if parent is selected remove selected children from params
			forRemoval = new Array;
			for (var i=0; i<o.params[field].length; i++){
				childPath = o.params[field][i];
				if (childPath.search(option)==0 && childPath != option){
					forRemoval.push(childPath);
				}
			}
			for (var x in forRemoval){
				var n = o.params[field].indexOf(forRemoval[x]);
				if (n != -1){
					o.params[field].splice(n,1);
				}
			}
		}
	}
	
	function buildSubmitURL(o)
	{
		var uri = o.baseURL + '/';
		
		uri += o.path;
		
		if (o.browseAction == false){
			if (typeof o.params['category'] != 'undefined'){
				o.params['category'] = o.params['categorySlug'];
				delete o.params['categorySlug'];
			}
			if (typeof o.params['userid'] != 'undefined'){
				delete o.params['userid'];
			}
			if (typeof o.params['core'] != 'undefined'){
				delete o.params['core'];
			}
		} else {
			delete o.params['categorySlug'];
			delete o.params['category'];
		}
		
		var filters = [];
		
		for (var attr in o.params){
			if (o.params[attr] instanceof Array){
				value = o.params[attr].join('||');
			} else {
				value = o.params[attr];
			}
			var filter = attr +'='+ value;
			filters.push(filter);
		}
		
		if (filters.length > 0){
			uri += '?' + filters.join('&');
		}
		
		return uri;
	}
	
	function appendLoader(o)
	{
		$(o.content).prepend('<div class="loading"></div>');
		$(o.content).find('div.loading').nextAll().css("display","none");
	}
}